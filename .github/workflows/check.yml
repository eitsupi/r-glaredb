# Workflow derived from https://github.com/r-lib/actions/tree/v2/examples
# Need help debugging build failures? Start at https://github.com/r-lib/actions#where-to-find-help
name: R-CMD-check

on:
  push:
    branches:
      - main
    paths:
      - .Rbuildignore
      - R/**
      - src/**
      - tests/**
      - tools/**
      - vignettes/*
      - configure*
      - DESCRIPTION
      - NAMESPACE
  pull_request:
    branches:
      - main
    paths:
      - .github/actions/setup/action.yaml
      - .github/workflows/check.yaml
      - .Rbuildignore
      - R/**
      - src/**
      - tests/**
      - tools/**
      - vignettes/*
      - configure*
      - DESCRIPTION
      - NAMESPACE
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

permissions: read-all

jobs:
  R-CMD-check:
    runs-on: ${{ matrix.config.os }}
    name: ${{ matrix.config.os }} (${{ matrix.config.r }})
    strategy:
      fail-fast: false
      matrix:
        config:
          - {os: macos-latest,   r: 'release'}
          - {os: windows-latest, r: 'release'}
          - {os: ubuntu-latest,   r: 'devel', http-user-agent: 'release'}
          - {os: ubuntu-latest,   r: 'release'}
          - {os: ubuntu-latest,   r: 'oldrel-1'}

    env:
      GITHUB_PAT: ${{ secrets.GITHUB_TOKEN }}
      R_KEEP_PKG_SOURCE: yes
      LIBR_GLAREDB_BUILD: "true"

    steps:
      - uses: actions/checkout@v4

      - uses: r-lib/actions/setup-pandoc@v2

      - uses: r-lib/actions/setup-r@v2
        with:
          r-version: ${{ matrix.config.r }}
          http-user-agent: ${{ matrix.config.http-user-agent }}
          use-public-rspm: true
          Ncpus: 2

      - uses: r-lib/actions/setup-r-dependencies@v2
        with:
          extra-packages: any::rcmdcheck
          needs: check

      - name: Set rust target
        id: rust-target
        run: |
          if [ "${{ runner.os }}" == "Windows" ]; then
            echo "TARGET=x86_64-pc-windows-gnu" >>"$GITHUB_OUTPUT"
          else
            echo "TARGET=$(rustc -vV | grep host | cut -d' ' -f2)" >>"$GITHUB_OUTPUT"
          fi

      - uses: Swatinem/rust-cache@v2
        with:
          workspaces: "src/rust -> target"
          shared-key: ${{ steps.rust-target.outputs.TARGET }}

      - name: Build lib
        env:
          NOT_CRAN: "true"
        run: |
          # make sure savvy is built from source because rust-cache doesn't work well.
          (find ~/.cargo/registry/ src/rust/target -name 'savvy-*' | xargs rm -rf) || true

          Rscript -e 'pkgbuild::compile_dll()'
          echo "LIBR_GLAREDB_PATH=$(pwd)/src/rust/target/${{ steps.rust-target.outputs.TARGET }}/release/librglaredb.a" >>$GITHUB_ENV

      - uses: r-lib/actions/check-r-package@v2
        with:
          upload-snapshots: true
          build_args: 'c("--no-manual","--compact-vignettes=gs+qpdf")'
